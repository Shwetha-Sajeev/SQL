Julia conducted a 15  days of learning SQL contest. The start date of the contest was March 01, 2016 and the end date was March 15, 2016.

Write a query to print total number of unique hackers who made at least  submission each day (starting on the first day of the contest), and find the hacker_id and name of the hacker who made maximum number of submissions each day. If more than one such hacker has a maximum number of submissions, print the lowest hacker_id. The query should print this information for each day of the contest, sorted by the date.

SELECT F1.date, F2.tot_count, F1.ID, F1.name FROM (SELECT T.submission_date AS date, T.hacker_id AS ID, H.name AS name FROM (SELECT submission_date, hacker_id, num_sub, @row_number := CASE WHEN @prev_submission_date = submission_date THEN @row_number + 1 ELSE 1 END AS row_num, @prev_submission_date := submission_date FROM (SELECT submission_date, hacker_id, COUNT(hacker_id) AS num_sub FROM Submissions GROUP BY submission_date, hacker_id ORDER BY submission_date, num_sub DESC, hacker_id) AS SUBTABLE, (SELECT @row_number := 0, @prev_submission_date := NULL) AS vars) AS T LEFT JOIN Hackers as H ON H.hacker_id = T.hacker_id WHERE row_num = 1 ORDER BY date) AS F1 LEFT JOIN (SELECT main_date, COUNT(total_submissions) AS tot_count FROM (SELECT main_date, hacker_id, COUNT(hacker_id) AS total_submissions FROM (SELECT DISTINCT D.submission_date AS main_date, S.submission_date AS submission_date, S.hacker_id AS hacker_id FROM Submissions AS D LEFT JOIN (SELECT DISTINCT submission_date, hacker_id FROM Submissions ORDER BY submission_date) AS S ON D.submission_date >= S.submission_date ORDER BY D.submission_date, S.hacker_id, S.submission_date) AS T GROUP BY main_date, hacker_id HAVING DATEDIFF (main_date, (SELECT MIN(submission_date) FROM Submissions)) + 1 = total_submissions) AS F GROUP BY main_date) AS F2 ON F1.date = F2.main_date;

